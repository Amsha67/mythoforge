import React from "react";
import "./CreationPersonnage.css";

const racinesMythos = {
  Gr√®ce: {
    prefixes: ["Ari", "Theo", "Kle", "Xan", "Demi", "Ili", "Pto"],
    noyaux: ["dor", "kratos", "phem", "nys", "thes", "gora", "leos"],
    suffixes: ["os", "ion", "ides", "eus", "icles", "ias"]
  },
  √âgypte: {
    prefixes: ["An", "Neph", "Kha", "Os", "Ra", "Thot", "Bast"],
    noyaux: ["mut", "tep", "sar", "khet", "amon", "maat", "rekh"],
    suffixes: ["hotep", "es", "ka", "seh", "nek", "et"]
  },
  Nordique: {
    prefixes: ["Sig", "Thor", "Rag", "Bry", "Ul", "Fen", "Hro"],
    noyaux: ["vald", "grim", "skel", "bjorn", "heim", "frost", "drak"],
    suffixes: ["nir", "hild", "ar", "ulf", "rik", "son", "a"]
  }
};

const classesRPG = [
  // Combattants
  "Guerrier", "Paladin","Berserker", "Gladiateur", "Chevalier noir",

  // Mages
  "Mage", "N√©cromancien","Ensorceleur","Invocateur", "√âl√©mentaliste",

  // R√¥deurs
  "R√¥deur", "Voleur", "Assassin",

  // Hybrides
  "Moine", "Barde", "Alchimiste",

  // Surnaturelles
  "Lycan", "Vampire", "D√©mon", "Enfant des dieux",

  // D√©fensives
  "Gardien", "Clerc", "Pr√™tre", "Chaman",

  // Sp√©ciales
  "Oniromancien",
];

function getRandomItem(list) {
  return list[Math.floor(Math.random() * list.length)];
}

function genererClasseAleatoire() {
  return getRandomItem(classesRPG);
}

function genererAttributAleatoire() {
  return getRandomItem(attributsSpeciaux);
}

const attributsSpeciaux = [
  {
    nom: "√âp√©e Solaire",
    effet: "Inflige des d√©g√¢ts br√ªlants aux ennemis, tout en les √©blouissant.",
    description: "Lou√© soit la soleil, cette lame irradie la lumi√®re du Soleil, br√ªlant tout sur son passage."
  },
  {
    nom: "Amulette Maudite",
    effet: "Augmente la puissance magique au prix d‚Äôune mal√©diction.",
    description: "Objet maudit par les dieux, elle conf√®re un pouvoir immense mais attire le regard des forces obscures."
  },
  {
    nom: "B√¢ton des √âl√©ments",
    effet: "Permet de contr√¥ler le feu, la glace la foudre et la terre.",
    description: "Ce b√¢ton ancestral canalise les forces primordiales de la nature."
  },
  {
    nom: "Anneau C√©leste",
    effet: "Offre une protection divine, r√©duisant les d√©g√¢ts subis.",
    description: "L'anneau, orn√© de runes anciennes, prot√®ge son porteur gr√¢ce √† la b√©n√©diction de RA."
  },
  {
    nom: "Ocarina de Lien",
    effet: "Permet de contr√¥ler les b√™tes et le cr√©atures mythologiques.",
    description: "Une m√©lodie envo√ªtante qui permet de rallier les cr√©atures adverses, on dit m√™me qu'une certaine m√©lodie permetterait de changer le cours du temps..."
  },
  {
    nom: "Bouclier de Verre",
    effet: "R√©duit les effets des mal√©dictions et de la magie.",
    description: "Un bouclier cr√©e dans la forge des Dieux qui repousse les forces obscures"
  },
  {
    nom: "Cape des Ombres",
    effet: "Permet de se rendre invisible pendant un court instant.",
    description: "Nul ne sait qui a tiss√© cette cape, personne ne l'a jamais vu..."
  },
  {
    nom: "Masque Ancien",
    effet: "Permet de voir au-del√† des illusions et des mensonges.",
    description: "Ce masque sacr√© d√©voile la v√©ritable nature des choses et des √™tres."
  },
  {
    nom: "Grimoire Interdit",
    effet: "Accorde de puissants sorts de n√©cromancie",
    description: "Un recueil ancien o√π sommeillent les arcanes les plus dangereux et puissants, il y est inscrit : Cthulhu."
  },
  {
    nom: "Armure Sacr√©e",
    effet: "Offre une d√©fense quasi-invincible contre les attaques physiques.",
    description: "Forg√©e par les dieux eux-m√™mes, elle prot√®ge contre les coups mortels."
  },
  {
    nom: "Sang de Dragon",
    effet: "Accro√Æt la force et la vitalit√© de mani√®re spectaculaire.",
    description: "Une essence draconique infus√©e dans les veines, on dit que ce sang viens d'un dragon nom√© Paturnax."
  },
  {
    nom: "Ailes Mystiques",
    effet: "Permet de s'envoler.",
    description: "Des ailes l√©gendaires conf√©rant l'agilit√© et la libert√© du vent."
  },
  {
    nom: "Couronne Sylvestre",
    effet: "Permet de comuniquer avec les plantes",
    description: "Couronne fa√ßonn√©e par les esprits de la nature, elle permet de philosopher avec votre ch√™ne pr√©fer√©"
  },
  {
    nom: "Calice d'√Çmes",
    effet: "Permet de r√©sister √† la mort une fois",
    description: "Un objet myst√©rieux qui relie deux vies en un destin commun, √† condition d'avoir donn√© la mort auparavant.."
  },
  {
    nom: "Sceptre de Gu√©rison",
    effet: "Permet de soigner.",
    description: "B√¢ton sacr√© utilis√© par les anciens pr√™tres de Rhon pour ramener la lumi√®re dans les t√©n√®bres."
  }
];

const iconesObjets = {
  "√âp√©e Solaire": "‚öîÔ∏è",
  "Amulette Maudite": "üìø",
  "B√¢ton des √âl√©ments": "ü™Ñ",
  "Anneau C√©leste": "üíç",
  "Ocarina de Lien": "üé∂",
  "Bouclier de Verre": "üõ°Ô∏è",
  "Cape des Ombres": "üï∂Ô∏è",
  "Masque Ancien": "üé≠",
  "Grimoire Interdit": "üìñ",
  "Armure Sacr√©e": "ü•ã",
  "Sang de Dragon": "üêâ",
  "Ailes Mystiques": "ü™Ω",
  "Couronne Sylvestre": "üëë",
  "Calice d'√Çmes": "üç∑",
  "Sceptre de Gu√©rison": "ü™¨"
};


function genererNomAleatoire(civilisation) {
  const racines = racinesMythos[civilisation] || racinesMythos["Gr√®ce"];
  return (
    getRandomItem(racines.prefixes) +
    getRandomItem(racines.noyaux) +
    getRandomItem(racines.suffixes)
  );
}

function CreationPersonnage({ personnage, setPersonnage, onValider, civilisation }) {
  const handleChange = (e) => {
    const { name, value } = e.target;
    setPersonnage((prev) => ({ ...prev, [name]: value }));
  };

  return (
    <div className="creation-box">
      <h3 className="subtitle">Cr√©ation de ton h√©ros</h3>

      <div className="field-group">
        <label>Nom du h√©ros :</label>
        <div className="input-with-button">
          <input
            type="text"
            name="nom"
            value={personnage.nom}
            onChange={handleChange}
            placeholder="Ex: Achille, Bastet, Freya..."
          />
          <button
            type="button"
            className="stone-button small"
            onClick={() =>
              setPersonnage((prev) => ({
                ...prev,
                nom: genererNomAleatoire(civilisation),
              }))
            }
          >
            Al√©atoire
          </button>
        </div>
      </div>

      <div className="field-group">
        <label>Classe :</label>
        <div className="input-with-button">
          <select
            name="classe"
            value={personnage.classe}
            onChange={handleChange}
          >
            <option value="">-- Choisir --</option>
            {classesRPG.map((cls, idx) => (
              <option key={idx} value={cls}>{cls}</option>
            ))}
          </select>
          <button
            type="button"
            className="stone-button small"
            onClick={() =>
              setPersonnage((prev) => ({
                ...prev,
                classe: genererClasseAleatoire(),
              }))
            }
          >
            Al√©atoire
          </button>
        </div>
      </div>

      <div className="field-group">
        <label>Objet l√©gendaire :</label>
        <div className="input-with-button">
          <select
  name="attribut"
  value={personnage.attribut}
  onChange={handleChange}
>
  <option value="">-- Choisir --</option>
  {attributsSpeciaux.map((attr, i) => (
    <option key={i} value={attr.nom}>{attr.nom}</option>
  ))}
</select>
{personnage.attribut && (
  <div key={personnage.attribut}
  className="attribut-details">
  <h4>{personnage.attribut}</h4>
  <div className="item-icon">
    {iconesObjets[personnage.attribut] || "‚ú®"}
  </div>
  <p className="section-title">Effet :</p>
  <p>{attributsSpeciaux.find(a => a.nom === personnage.attribut)?.effet}</p>
  <p className="section-title">Histoire :</p>
  <p>{attributsSpeciaux.find(a => a.nom === personnage.attribut)?.description}</p>
</div>

)}

          <button
            type="button"
            className="stone-button small"
            onClick={() =>
  setPersonnage((prev) => ({
    ...prev,
    attribut: genererAttributAleatoire().nom,  
  }))
}

          >
            Al√©atoire
          </button>
        </div>
      </div>

      <button className="stone-button main-action hero-validate" onClick={onValider}>
        Cr√©er le h√©ros
      </button>
    </div>
  );
}

export default CreationPersonnage;
